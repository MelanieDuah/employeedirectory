{"version":3,"sources":["index.js"],"names":["Employee","props","scope","index","employee","firstname","lastname","department","EmployeesData","state","originalData","data","employees","employeesCopy","this","slice","sort","firstEmployee","secondEmployee","localeCompare","setState","event","filteredEmployees","filter","toLocaleLowerCase","includes","target","value","className","onClick","sortByFirstName","type","id","name","onChange","filterByFirstName","filterByLastName","filterBydepartment","map","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"k5BAIA,SAASA,EAASC,GAChB,OACE,4BACE,wBAAIC,MAAM,OAAOD,EAAME,OACvB,4BAAKF,EAAMG,SAASC,WACpB,4BAAKJ,EAAMG,SAASE,UACpB,4BAAKL,EAAMG,SAASG,a,IAMpBC,E,kDAEJ,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IACDQ,MAAQ,CACXC,aAAcC,EACdC,UAAWD,GAJI,E,8DASjB,IAAIE,EAAgBC,KAAKL,MAAMG,UAAUG,QACzCF,EAAcG,MAAK,SAACC,EAAeC,GACjC,OAAOD,EAAcZ,UAAUc,cAAcD,EAAeb,cAE9DS,KAAKM,SAAS,CAAER,UAAWC,M,wCAGXQ,GAChB,IACIC,EADgBR,KAAKL,MAAMC,aAAaK,QACNQ,QAAO,SAAAnB,GAAQ,OACnDA,EAASC,UAAUmB,oBAAoBC,SAASJ,EAAMK,OAAOC,MAAMH,wBAErEV,KAAKM,SAAS,CAAER,UAAWU,M,uCAGZD,GACf,IACIC,EADgBR,KAAKL,MAAMC,aAAaK,QACNQ,QAAO,SAAAnB,GAAQ,OACnDA,EAASE,SAASkB,oBAAoBC,SAASJ,EAAMK,OAAOC,MAAMH,wBAEpEV,KAAKM,SAAS,CAAER,UAAWU,M,yCAGVD,GACjB,IACIC,EADgBR,KAAKL,MAAMC,aAAaK,QACNQ,QAAO,SAAAnB,GAAQ,OACnDA,EAASG,WAAWiB,oBAAoBC,SAASJ,EAAMK,OAAOC,MAAMH,wBAEtEV,KAAKM,SAAS,CAAER,UAAWU,M,+BAGnB,IAAD,OACP,OACE,yBAAKM,UAAU,OACb,yBAAKA,UAAU,aACb,2BAAOA,UAAU,SACf,+BACE,4BACE,wBAAI1B,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAM,4BAAQ2B,QAAS,kBAAM,EAAKC,oBAA5B,UAChB,wBAAI5B,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,gBAGJ,+BACE,4BACE,6BACA,4BAAI,2BAAO6B,KAAK,OAAOC,GAAG,QAAQC,KAAK,QAAQC,SAAU,SAACb,GAAD,OAAW,EAAKc,kBAAkBd,OAC3F,4BAAI,2BAAOU,KAAK,OAAOC,GAAG,QAAQC,KAAK,QAAQC,SAAU,SAACb,GAAD,OAAW,EAAKe,iBAAiBf,OAC1F,4BAAI,2BAAOU,KAAK,OAAOC,GAAG,QAAQC,KAAK,QAAQC,SAAU,SAACb,GAAD,OAAW,EAAKgB,mBAAmBhB,QAE7FP,KAAKL,MAAMG,UAAU0B,KAAI,SAAClC,EAAUD,GAAX,OACxB,kBAACH,EAAD,CAAUuC,IAAKpC,EAAOA,MAAOA,EAAOC,SAAUA,e,GA/DlCoC,IAAMC,WAyElCC,IAASC,OACP,kBAACnC,EAAD,MACAoC,SAASC,eAAe,oB","file":"static/js/main.790495b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport data from './data/db.json';\r\n\r\nfunction Employee(props) {\r\n  return (\r\n    <tr>\r\n      <th scope=\"row\">{props.index}</th>\r\n      <td>{props.employee.firstname}</td>\r\n      <td>{props.employee.lastname}</td>\r\n      <td>{props.employee.department}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\n\r\nclass EmployeesData extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      originalData: data,\r\n      employees: data\r\n    }\r\n  }\r\n\r\n  sortByFirstName() {\r\n    let employeesCopy = this.state.employees.slice();\r\n    employeesCopy.sort((firstEmployee, secondEmployee) => {\r\n      return firstEmployee.firstname.localeCompare(secondEmployee.firstname);\r\n    });\r\n    this.setState({ employees: employeesCopy });\r\n  }\r\n\r\n  filterByFirstName(event) {\r\n    let employeesCopy = this.state.originalData.slice();\r\n    let filteredEmployees = employeesCopy.filter(employee =>\r\n      employee.firstname.toLocaleLowerCase().includes(event.target.value.toLocaleLowerCase()));\r\n\r\n    this.setState({ employees: filteredEmployees });\r\n  }\r\n\r\n  filterByLastName(event) {\r\n    let employeesCopy = this.state.originalData.slice();\r\n    let filteredEmployees = employeesCopy.filter(employee =>\r\n      employee.lastname.toLocaleLowerCase().includes(event.target.value.toLocaleLowerCase()));\r\n\r\n    this.setState({ employees: filteredEmployees });\r\n  }\r\n\r\n  filterBydepartment(event) {\r\n    let employeesCopy = this.state.originalData.slice();\r\n    let filteredEmployees = employeesCopy.filter(employee =>\r\n      employee.department.toLocaleLowerCase().includes(event.target.value.toLocaleLowerCase()));\r\n\r\n    this.setState({ employees: filteredEmployees });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='row'>\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\"><button onClick={() => this.sortByFirstName()}>First</button></th>\r\n                <th scope=\"col\">Last</th>\r\n                <th scope=\"col\">Department</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td></td>\r\n                <td><input type=\"text\" id=\"fname\" name=\"fname\" onChange={(event) => this.filterByFirstName(event)} /></td>\r\n                <td><input type=\"text\" id=\"fname\" name=\"fname\" onChange={(event) => this.filterByLastName(event)} /></td>\r\n                <td><input type=\"text\" id=\"fname\" name=\"fname\" onChange={(event) => this.filterBydepartment(event)} /></td>\r\n              </tr>\r\n              {this.state.employees.map((employee, index) => (\r\n                <Employee key={index} index={index} employee={employee} />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <EmployeesData />,\r\n  document.getElementById('maincontainer')\r\n);\r\n"],"sourceRoot":""}